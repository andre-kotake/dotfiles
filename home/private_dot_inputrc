# set editing-mode emacs

$if Bash
# insert open and close double quotes
# and move to just after the open quote
"\C-x\"": "\"\"\C-b"
# insert a backslash (testing backslash escapes
# in sequences and macros)
"\C-x\\": "\\"
# Quote the current or previous word
"\C-xq": "\eb\"\ef\""
# Add a binding to refresh the line, which is unbound
"\C-xr": redraw-current-line
# Edit variable on current line.
"\M-\C-v": "\C-a\C-k$\C-y\M-\C-e\C-a\C-y="

"\eh": backward-kill-word
$endif

# Inserts the clipboard as single string of characters, instead of inserting characters as if they were entered from the keyboard
set enable-bracketed-paste on
# Color files by types (may cause completion text blink in some terminals)
set colored-stats On
# Append char to indicate type
set visible-stats On
# Mark symlinked directories
set mark-symlinked-directories On
# Color the common prefix
set colored-completion-prefix On
# Color the common prefix in menu-complete
set menu-complete-display-prefix On
# Treat hyphens and underscores as equivalent
set completion-map-case on
set completion-ignore-case on
set show-all-if-unmodified on
set show-all-if-ambiguous on

# Tab or Shift+Tab cycles between possible completions
TAB: menu-complete
"\e[Z": menu-complete-backward
# Control+up or down
"\e[1;5A": menu-complete
"\e[1;5B": menu-complete-backward
# Alt + q accepts the current command
"\[q": complete
# Use the text that has already been typed as the prefix for searching through
# commands (i.e. more intelligent Up/Down behavior)
"\e[B": history-search-forward
"\e[A": history-search-backward

# Do not autocomplete hidden files unless the pattern explicitly begins with a dot
set match-hidden-files off
# Show all autocomplete results at once
set page-completions on
# If there are more than 100 possible completions for a word, ask to show them all
set completion-query-items 100

# Be more intelligent when autocompleting by also looking at the text after
# the cursor. For example, when the current line is "cd ~/src/mozil", and
# the cursor is on the "z", pressing Tab will not autocomplete it to "cd
# ~/src/mozillail", but to "cd ~/src/mozilla". (This is supported by the
# Readline used by Bash 4.)
set skip-completed-text on

# Allow UTF-8 input and output, instead of showing stuff like $'\0123\0456'
set input-meta on
set output-meta on
set convert-meta off
set echo-control-characters off

$if mode=vi
  set show-mode-in-prompt on

  set keymap vi-command
  # these are for vi-command mode
  j: history-search-forward
  k: history-search-backward
  "\C-Q": menu-complete
  "\eQ": menu-complete-backward

  set keymap vi-insert
  "\C-Q": menu-complete
  "\eQ": menu-complete-backward
  # these are for vi-insert mode
$endif

# set keymap vi-command
# "k": history-search-backward
# "j": history-search-forward
#
# set keymap vi-insert
# "\C-A": beginning-of-line
# "\C-B": backward-char
# "\C-D": delete-char
# "\C-E": end-of-line
# "\C-F": forward-char
# "\C-K": kill-line
# "\C-L": clear-screen
# "\C-N": next-history
# "\C-P": previous-history
# "\C-O": operate-and-get-next
#
# # Enable Readline not waiting for additional input when a key is pressed.
# # Needed for the mappings below.
# set keyseq-timeout 0
#
# # `yank-last-arg` does not work exactly as in emacs mode
# "\e.": yank-last-arg
# "\e\177": backward-kill-word
# "\e0": digit-argument
# "\e1": digit-argument
# "\e2": digit-argument
# "\e3": digit-argument
# "\e4": digit-argument
# "\e5": digit-argument
# "\e6": digit-argument
# "\e7": digit-argument
# "\e8": digit-argument
# "\e9": digit-argument
# "\eb": backward-word
# "\ec": capitalize-word
# "\ed": kill-word
# "\ef": forward-word
# "\el": downcase-word
# "\en": non-incremental-forward-search-history
# "\ep": non-incremental-reverse-search-history
# "\et": transpose-words
# "\eu": upcase-word
# "\ey": yank-pop
#
# # some other useful mappings
#
# "\e/": complete-filename
# "\ek": kill-whole-line
# "\eo": "\C-v\C-j"
# # quickly switch to "normal" mode
# "\C-[": vi-movement-mode
# # perserve the currently editing line so that we can
# # do something else before restoring it.
# "\eg": insert-comment
# "\er": "\C-R#\C-A\C-D\C-E"
#
# set editing-mode vi
